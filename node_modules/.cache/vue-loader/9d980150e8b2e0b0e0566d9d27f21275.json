{"remainingRequest":"C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Public\\软件\\app\\src\\components\\issue\\daily\\daily.vue?vue&type=template&id=6c1f140d&scoped=true&","dependencies":[{"path":"C:\\Users\\Public\\软件\\app\\src\\components\\issue\\daily\\daily.vue","mtime":1558065367497},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552270042041},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552270044128},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552270042041},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1552270044128}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container-daily my-vant\" },\n    [\n      _c(\n        \"van-nav-bar\",\n        {\n          staticClass: \"my-nav-bar\",\n          attrs: {\n            title: \"日常巡检\",\n            fixed: \"\",\n            border: false,\n            \"z-index\": 100\n          },\n          on: { \"click-left\": _vm.goBack }\n        },\n        [\n          _c(\"span\", {\n            staticClass: \"el-icon-arrow-left fontsize\",\n            attrs: { slot: \"left\" },\n            slot: \"left\"\n          })\n        ]\n      ),\n      _c(\"div\", { staticClass: \"Interlayer\" }),\n      _c(\n        \"div\",\n        { staticClass: \"wrapper\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"details_box\" },\n            [\n              _c(\"div\", { staticClass: \"details\" }, [\n                _c(\"span\", [\n                  _vm._v(\"\\n          主题：\\n          \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.theme,\n                        expression: \"form.theme\"\n                      }\n                    ],\n                    attrs: { type: \"text\", placeholder: \"请输入主题文字\" },\n                    domProps: { value: _vm.form.theme },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"theme\", $event.target.value)\n                      }\n                    }\n                  })\n                ])\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"details\", on: { click: _vm.isShowType } },\n                [\n                  _c(\"span\", [\n                    _vm._v(\"\\n          问题类型：\\n          \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.qt,\n                          expression: \"form.qt\"\n                        }\n                      ],\n                      attrs: { type: \"text\", placeholder: \"请选择问题类型\" },\n                      domProps: { value: _vm.form.qt },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.form, \"qt\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _c(\"span\", { staticClass: \"el-icon-arrow-right\" })\n                  ])\n                ]\n              ),\n              _c(\n                \"van-row\",\n                { staticClass: \"details\" },\n                [\n                  _c(\n                    \"van-col\",\n                    { staticClass: \"my-radio-txt\", attrs: { span: \"6\" } },\n                    [_vm._v(\"风险类型：\")]\n                  ),\n                  _c(\n                    \"van-col\",\n                    { attrs: { span: \"18\" } },\n                    [\n                      _c(\n                        \"van-radio-group\",\n                        {\n                          staticClass: \"my-radio-group\",\n                          model: {\n                            value: _vm.form.category,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"category\", $$v)\n                            },\n                            expression: \"form.category\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"van-radio\",\n                            { staticClass: \"my-radio\", attrs: { name: 1 } },\n                            [_vm._v(\"质量\")]\n                          ),\n                          _c(\n                            \"van-radio\",\n                            { staticClass: \"my-radio\", attrs: { name: 2 } },\n                            [_vm._v(\"安全\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"van-cell-group\",\n                { staticClass: \"details\", on: { click: _vm.choseBuilding } },\n                [\n                  _c(\"van-field\", {\n                    staticClass: \"my-field\",\n                    attrs: {\n                      placeholder: \"请选择楼栋\",\n                      label: \"楼栋：\",\n                      \"right-icon\": \"arrow\",\n                      disabled: \"\",\n                      value: _vm.form.building\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"van-cell-group\",\n                { staticClass: \"details\", on: { click: _vm.choseFloor } },\n                [\n                  _c(\"van-field\", {\n                    staticClass: \"my-field\",\n                    attrs: {\n                      placeholder: \"请选择楼层\",\n                      label: \"楼层：\",\n                      \"right-icon\": \"arrow\",\n                      disabled: \"\",\n                      value: _vm.form.floor\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"details\" }, [\n                _c(\"span\", [\n                  _vm._v(\"\\n          发起人：\\n          \"),\n                  _c(\"span\", [_vm._v(_vm._s(_vm.form.initiator))])\n                ])\n              ]),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"details\",\n                  on: { click: _vm.isShowInitiationTime }\n                },\n                [\n                  _c(\"span\", [\n                    _vm._v(\"\\n          发起时间：\\n          \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.startTime,\n                          expression: \"form.startTime\"\n                        }\n                      ],\n                      attrs: { type: \"text\", placeholder: \"请选择发起时间\" },\n                      domProps: { value: _vm.form.startTime },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(_vm.form, \"startTime\", $event.target.value)\n                        }\n                      }\n                    }),\n                    _c(\"span\", { staticClass: \"el-icon-arrow-right\" })\n                  ])\n                ]\n              ),\n              _c(\n                \"div\",\n                {},\n                [\n                  _c(\n                    \"van-cell-group\",\n                    [\n                      _c(\"van-field\", {\n                        attrs: {\n                          label: \"描述：\",\n                          type: \"textarea\",\n                          placeholder: \"请输入描述\",\n                          rows: \"2\",\n                          autosize: \"\"\n                        },\n                        model: {\n                          value: _vm.form.describe,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"describe\", $$v)\n                          },\n                          expression: \"form.describe\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"picture upload\" }, [\n            _c(\"p\", { staticClass: \"photo\" }, [_vm._v(\"上传照片\")]),\n            _c(\"div\", { staticClass: \"photo_img\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"Img\" },\n                [\n                  _c(\"img\", {\n                    staticClass: \"photoImg\",\n                    attrs: {\n                      src: require(\"../../../assets/imgs/storied_building.png\"),\n                      alt: \"\"\n                    }\n                  }),\n                  _c(\"van-icon\", { attrs: { name: \"clear\" } })\n                ],\n                1\n              ),\n              _vm._m(0),\n              _c(\"span\", [_vm._v(\"最多上传3张\")])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"details_box\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"details\", on: { click: _vm.openReceiver } },\n              [\n                _c(\"span\", [\n                  _vm._v(\"\\n          接收人：\\n          \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.personVal,\n                        expression: \"personVal\"\n                      }\n                    ],\n                    attrs: { type: \"text\", placeholder: \"请选择接收人\" },\n                    domProps: { value: _vm.personVal },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.personVal = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"el-icon-arrow-right\" })\n                ])\n              ]\n            ),\n            _c(\n              \"div\",\n              {\n                staticClass: \"details details_border\",\n                on: { click: _vm.isShowEndTime }\n              },\n              [\n                _c(\"span\", [\n                  _vm._v(\"\\n          整改截止时间：\\n          \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.completionTime,\n                        expression: \"form.completionTime\"\n                      }\n                    ],\n                    attrs: { type: \"text\", placeholder: \"请选择整改截止时间\" },\n                    domProps: { value: _vm.form.completionTime },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.form,\n                          \"completionTime\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _c(\"span\", { staticClass: \"el-icon-arrow-right\" })\n                ])\n              ]\n            )\n          ]),\n          _c(\n            \"van-button\",\n            {\n              staticClass: \"confirm\",\n              attrs: {\n                size: \"large\",\n                type: \"info\",\n                loading: _vm.loadingBtm,\n                block: \"\"\n              },\n              on: { click: _vm.complete }\n            },\n            [_vm._v(\"确认\")]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"van-actionsheet\",\n        {\n          model: {\n            value: _vm.show_type,\n            callback: function($$v) {\n              _vm.show_type = $$v\n            },\n            expression: \"show_type\"\n          }\n        },\n        [\n          _c(\"van-picker\", {\n            staticClass: \"my-picker\",\n            attrs: {\n              \"show-toolbar\": \"\",\n              columns: _vm.columnsType,\n              loading: _vm.loadingType\n            },\n            on: { confirm: _vm.onConfirmType, cancel: _vm.onCancel }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"van-actionsheet\",\n        {\n          model: {\n            value: _vm.show_category,\n            callback: function($$v) {\n              _vm.show_category = $$v\n            },\n            expression: \"show_category\"\n          }\n        },\n        [\n          _c(\"van-picker\", {\n            attrs: {\n              \"show-toolbar\": \"\",\n              columns: _vm.columnsCategory,\n              \"value-key\": \"label\"\n            },\n            on: { confirm: _vm.onConfirmCategory, cancel: _vm.onCancel }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"van-actionsheet\",\n        {\n          model: {\n            value: _vm.show_initiation_time,\n            callback: function($$v) {\n              _vm.show_initiation_time = $$v\n            },\n            expression: \"show_initiation_time\"\n          }\n        },\n        [\n          _c(\"van-datetime-picker\", {\n            staticClass: \"my-picker\",\n            attrs: { type: \"date\", \"min-date\": _vm.minDate },\n            on: { confirm: _vm.onConfirmInitiation, cancel: _vm.onCancel }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"van-actionsheet\",\n        {\n          model: {\n            value: _vm.show_end_time,\n            callback: function($$v) {\n              _vm.show_end_time = $$v\n            },\n            expression: \"show_end_time\"\n          }\n        },\n        [\n          _c(\"van-datetime-picker\", {\n            staticClass: \"my-picker\",\n            attrs: { type: \"date\", \"min-date\": _vm.minDate },\n            on: { confirm: _vm.onConfirmEnd, cancel: _vm.onCancel }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"van-actionsheet\",\n        {\n          staticClass: \"receiver\",\n          attrs: { \"close-on-click-overlay\": true },\n          model: {\n            value: _vm.show_receiver,\n            callback: function($$v) {\n              _vm.show_receiver = $$v\n            },\n            expression: \"show_receiver\"\n          }\n        },\n        [\n          _c(\n            \"van-checkbox-group\",\n            {\n              model: {\n                value: _vm.personVal,\n                callback: function($$v) {\n                  _vm.personVal = $$v\n                },\n                expression: \"personVal\"\n              }\n            },\n            [\n              _c(\n                \"van-cell-group\",\n                _vm._l(_vm.receiver, function(item, index) {\n                  return _c(\n                    \"van-cell\",\n                    {\n                      key: item.id,\n                      staticClass: \"my-cell\",\n                      attrs: { clickable: \"\", title: item.text },\n                      on: {\n                        click: function($event) {\n                          return _vm.toggleCheckbox(index, item.id)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"van-checkbox\", {\n                        ref: \"checkboxes\",\n                        refInFor: true,\n                        staticClass: \"my-checkbox\",\n                        attrs: { name: item.text, shape: \"square\" }\n                      })\n                    ],\n                    1\n                  )\n                }),\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"van-actionsheet\", {\n        attrs: { actions: _vm.actions },\n        on: { select: _vm.onSelect },\n        model: {\n          value: _vm.isSelect,\n          callback: function($$v) {\n            _vm.isSelect = $$v\n          },\n          expression: \"isSelect\"\n        }\n      }),\n      _c(\n        \"van-popup\",\n        {\n          attrs: { position: \"bottom\" },\n          model: {\n            value: _vm.popupShow,\n            callback: function($$v) {\n              _vm.popupShow = $$v\n            },\n            expression: \"popupShow\"\n          }\n        },\n        [\n          _c(\"van-picker\", {\n            staticClass: \"my-picker\",\n            attrs: {\n              \"show-toolbar\": \"\",\n              title: _vm.pickerTitle,\n              columns: _vm.columns,\n              loading: _vm.pickerLoading,\n              \"value-key\": _vm.value_key\n            },\n            on: {\n              cancel: function($event) {\n                _vm.popupShow = false\n              },\n              confirm: _vm.onConfirm\n            }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"img\" }, [\n      _c(\"img\", {\n        staticClass: \"upload_photos\",\n        attrs: {\n          src: require(\"../../../assets/imgs/upload_photos.png\"),\n          alt: \"\"\n        }\n      })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}