{"remainingRequest":"C:\\Users\\Public\\软件\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Public\\软件\\app\\src\\components\\index\\ProblemAnalysis\\ProblemAnalysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Public\\软件\\app\\src\\components\\index\\ProblemAnalysis\\ProblemAnalysis.vue","mtime":1558065367534},{"path":"C:\\Users\\Public\\软件\\app\\.babelrc","mtime":1553246877633},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552270042041},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1552270024016},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552270042041},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1552270044128}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Public\\\\\\u8F6F\\u4EF6\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GetTypeAnalysis, GetBuilding } from \"@/api/api.js\";\nimport echarts from \"echarts\";\nexport default {\n  data: function data() {\n    return {\n      ProjectID: localStorage.getItem('projectid'),\n      //项目ID\n      userID: localStorage.getItem(\"userId\"),\n      //用户ID\n      buildingName: \"整体楼栋\",\n      //楼栋名称\n      dateType: 1,\n      //数据查询类型（1：累计2：年3：月4：周）\n      year: new Date().getFullYear(),\n      month: new Date().getMonth() + 1,\n      week: 1,\n      popupShow: false,\n      //弹出层是否显示\n      pickerLoading: false,\n      //是否显示加载状态\n      pickerTitle: \"\",\n      //顶部栏标题\n      value_key: \"\",\n      //选项对象中，文字对应的 key\n      columns: [],\n      //对象数组，配置每一列显示的数据\n      showYear: false,\n      //上拉框默认隐藏(年)\n      showMonth: false,\n      //上拉框默认隐藏(月)\n      showWeek: false,\n      //上拉框默认隐藏(周)\n      columnsYear: [\"2015年\", \"2016年\", \"2017年\", \"2018年\", \"2019年\"],\n      //时间选择年\n      currentMonth: new Date(),\n      //时间选择月\n      currentWeek: new Date(),\n      // 时间选择周\n      maxDate: new Date(),\n      //最大选择时间\n      barData: [],\n      category: [],\n      buildList: [] //楼栋集合\n\n    };\n  },\n  created: function created() {\n    this.getTypeAnalysis(); // this.getBuildingData()\n  },\n  mounted: function mounted() {},\n  methods: {\n    /**\r\n     * @name 获取问题类型分析数据\r\n     * @param {string} BuildingName 楼栋名称（值为空是查整体）\r\n     * @param {integer} DateType 数据查询类型（1：累计2：年3：月4：周）\r\n     * @param {integer} Year 年\r\n     * @param {integer} Month 月\r\n     * @param {integer} Week 周\r\n     */\n    getTypeAnalysis: function () {\n      var _getTypeAnalysis = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var params, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {\n                  ProjectID: this.ProjectID,\n                  BuildingName: this.buildingName == \"整体楼栋\" ? \"\" : this.buildingName,\n                  DateType: this.dateType,\n                  Year: this.year,\n                  Month: this.month,\n                  Week: this.week\n                };\n                _context.next = 3;\n                return this.Request(GetTypeAnalysis(params));\n\n              case 3:\n                data = _context.sent;\n                this.category = [];\n                this.barData = [];\n\n                if (data.StatusCode === 200) {\n                  if (data.Detiel.length > 0) {\n                    data.Detiel.forEach(function (item) {\n                      _this.category.push(item.ProblemType);\n\n                      _this.barData.push(item.Count);\n                    });\n                    this.barChart();\n                  } else {\n                    this.$toast({\n                      message: \"暂无数据！\",\n                      className: \"my-toast\"\n                    });\n                  } // console.log(\"==getTypeAnalysis==\", this.category, this.barData)\n\n                } else {\n                  this.$toast({\n                    type: \"fail\",\n                    message: data.message ? data.message : \"后台异常\",\n                    className: \"my-toast\"\n                  });\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getTypeAnalysis() {\n        return _getTypeAnalysis.apply(this, arguments);\n      }\n\n      return getTypeAnalysis;\n    }(),\n\n    /**\r\n     * @name 获取模型的楼栋信息\r\n     */\n    getBuildingData: function getBuildingData() {\n      var _this2 = this;\n\n      this.Request(GetBuilding({\n        projectid: this.ProjectID\n      })).then(function (data) {\n        if (data.StatusCode === 200) {\n          if (data.Detiel.length > 0) {\n            _this2.buildList = data.Detiel;\n          } else {\n            _this2.buildList = [];\n          }\n        } else {\n          _this2.$toast({\n            className: \"my-toast\",\n            type: \"fail\",\n            message: data.Message\n          });\n        }\n      });\n    },\n\n    /**\r\n     * @name 点击菜单项触发的事件回调，用户可以通过相应的菜单项key进行不同的操作\r\n     * @param {dropdown-item 的指令} command key\r\n     */\n    handleCommand: function handleCommand(command) {\n      this.buildingName = command;\n      this.getTypeAnalysis();\n    },\n    //返回\n    goBack: function goBack() {\n      this.$router.push({\n        path: \"/Risk\"\n      });\n    },\n    startCumulative: function startCumulative() {\n      this.dateType = 1;\n      this.getTypeAnalysis();\n    },\n    //点击年月周显示弹窗\n    actionsheetYear: function actionsheetYear() {\n      this.pickerTitle = \"年\";\n      this.popupShow = true;\n      var date = new Date();\n      var year = date.getFullYear();\n      var years = [];\n\n      for (var i = 0; i < 6; i++) {\n        years.push(Number(year) - i);\n      }\n\n      this.dateType = 2;\n      this.columns = years;\n    },\n    actionsheetMonth: function actionsheetMonth() {\n      this.pickerTitle = \"月\";\n      this.popupShow = true;\n      this.dateType = 3;\n      this.columns = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    },\n    actionsheetWeek: function actionsheetWeek() {\n      this.pickerTitle = \"周\";\n      this.popupShow = true;\n      this.dateType = 4;\n      this.columns = [1, 2, 3, 4, 5];\n    },\n    //对选项文字进行处理\n    formatter: function formatter(type, value) {\n      if (type === \"year\") {\n        return \"\".concat(value, \"\\u5E74\");\n      } else if (type === \"month\") {\n        return \"\".concat(value, \"\\u6708\");\n      }\n\n      return value;\n    },\n\n    /**\r\n     * @name 点击完成按钮时触发\r\n     */\n    onConfirm: function onConfirm(value, index) {\n      switch (this.pickerTitle) {\n        case \"年\":\n          {\n            this.year = value;\n            this.popupShow = false;\n            this.getTypeAnalysis();\n          }\n          break;\n\n        case \"月\":\n          {\n            this.month = value;\n            this.popupShow = false;\n            this.getTypeAnalysis();\n          }\n          break;\n\n        case \"周\":\n          {\n            this.week = value;\n            this.popupShow = false;\n            this.getTypeAnalysis();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    onCancel: function onCancel() {\n      console.log(\"取消\");\n      this.showYear = false;\n      this.showMonth = false;\n      this.showWeek = false;\n    },\n    //echart横向柱状图\n    barChart: function barChart() {\n      var myChart = echarts.init(this.$refs.myChartBar); //初始化数据\n\n      var option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          top: \"1%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"value\",\n          show: false,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: \"category\",\n          data: this.category,\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          offset: 10,\n          nameTextStyle: {\n            fontSize: 24\n          }\n        },\n        series: [{\n          name: \"数量\",\n          type: \"bar\",\n          data: this.barData,\n          barWidth: 16,\n          barGap: 10,\n          smooth: true,\n          label: {\n            normal: {\n              show: true,\n              position: \"right\",\n              offset: [0, 0],\n              textStyle: {\n                color: \"#F68300\",\n                fontSize: 13\n              }\n            }\n          },\n          itemStyle: {\n            emphasis: {\n              barBorderRadius: 7\n            },\n            normal: {\n              barBorderRadius: 7,\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: \"#3977E6\"\n              }, {\n                offset: 1,\n                color: \"#37BBF8\"\n              }])\n            }\n          }\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};",{"version":3,"sources":["ProblemAnalysis.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 问题类型分析 -->\r\n<template>\r\n  <div class=\"container-problem-analysis\">\r\n    <!-- 头部 -->\r\n    <van-nav-bar title=\"问题类型分析\" @click-left=\"goBack\" fixed :border=\"false\" :z-index=\"100\" class=\"my-nav-bar\">\r\n      <span class=\"el-icon-arrow-left fontsize\" slot=\"left\"></span>\r\n    </van-nav-bar>\r\n    <div class=\"wrapper\">\r\n      <el-dropdown trigger=\"click\" @visible-change=\"getBuildingData\" @command=\"handleCommand\" class=\"my-dropdown\">\r\n        <span class=\"el-dropdown-link\">\r\n          <img src=\"../../../assets/imgs/storied_building.png\" alt>\r\n          {{buildingName}}\r\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\" class=\"my-dropdown-menu\">\r\n          <el-dropdown-item command=\"整体楼栋\">整体楼栋</el-dropdown-item>\r\n          <el-dropdown-item v-for=\"(item, index) in buildList\" :key=\"index\" :command=\"item.text\">{{item.text}}</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n      <div class=\"cumulative\">\r\n        <span class=\"start active\" @click=\"startCumulative\">开工累计</span>\r\n        <span class=\"year\" @click=\"actionsheetYear\">{{year}}年</span>\r\n        <span class=\"month\" @click=\"actionsheetMonth\">{{month}}月</span>\r\n        <span class=\"week\" @click=\"actionsheetWeek\">{{week}}周</span>\r\n      </div>\r\n      <div class=\"my_echarts\">\r\n        <div ref=\"myChartBar\" class=\"chart_bar\"></div>\r\n      </div>\r\n    </div>\r\n    \r\n    <van-popup v-model=\"popupShow\" position=\"bottom\">\r\n      <van-picker\r\n        show-toolbar\r\n        :title=\"pickerTitle\"\r\n        :columns=\"columns\"\r\n        :loading=\"pickerLoading\"\r\n        :value-key=\"value_key\"\r\n        @cancel=\"popupShow = false\"\r\n        @confirm=\"onConfirm\"\r\n        class=\"my-picker\"\r\n      />\r\n    </van-popup>\r\n\r\n    <van-actionsheet v-model=\"showYear\">\r\n      <van-picker show-toolbar :columns=\"columnsYear\" @cancel=\"onCancel\" @confirm=\"onConfirm\"/>\r\n    </van-actionsheet>\r\n    <van-actionsheet v-model=\"showMonth\">\r\n      <van-datetime-picker\r\n        v-model=\"currentMonth\"\r\n        type=\"year-month\"\r\n        :max-date=\"maxDate\"\r\n        :formatter=\"formatter\"\r\n      />\r\n    </van-actionsheet>\r\n    <van-actionsheet v-model=\"showWeek\">\r\n      <div class=\"block\">\r\n        <!-- <span class=\"demonstration\">周</span> -->\r\n        <el-date-picker v-model=\"currentWeek\" type=\"week\" format=\"yyyy 第 WW 周\" placeholder=\"选择周\"></el-date-picker>\r\n      </div>\r\n    </van-actionsheet>\r\n  </div>\r\n</template>\r\n\r\n<script type='textecmascript-6'>\r\nimport { GetTypeAnalysis, GetBuilding } from \"@/api/api.js\";\r\nimport echarts from \"echarts\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      ProjectID: localStorage.getItem('projectid'), //项目ID\r\n      userID: localStorage.getItem(\"userId\"), //用户ID\r\n      buildingName: \"整体楼栋\",  //楼栋名称\r\n      dateType: 1,  //数据查询类型（1：累计2：年3：月4：周）\r\n      year: new Date().getFullYear(),\r\n      month: new Date().getMonth() + 1,\r\n      week: 1,\r\n      popupShow: false,  //弹出层是否显示\r\n      pickerLoading: false,  //是否显示加载状态\r\n      pickerTitle: \"\",  //顶部栏标题\r\n      value_key: \"\",  //选项对象中，文字对应的 key\r\n      columns: [],  //对象数组，配置每一列显示的数据\r\n\r\n      showYear: false, //上拉框默认隐藏(年)\r\n      showMonth: false, //上拉框默认隐藏(月)\r\n      showWeek: false,//上拉框默认隐藏(周)\r\n      columnsYear: [\"2015年\", \"2016年\", \"2017年\", \"2018年\", \"2019年\"], //时间选择年\r\n      currentMonth: new Date(), //时间选择月\r\n      currentWeek: new Date(), // 时间选择周\r\n      maxDate: new Date(), //最大选择时间\r\n      barData: [],\r\n      category: [],\r\n      buildList: []  //楼栋集合\r\n    };\r\n  },\r\n  created(){\r\n    this.getTypeAnalysis();\r\n    // this.getBuildingData()\r\n  },\r\n  mounted() {\r\n    \r\n  },\r\n  methods: {\r\n    /**\r\n     * @name 获取问题类型分析数据\r\n     * @param {string} BuildingName 楼栋名称（值为空是查整体）\r\n     * @param {integer} DateType 数据查询类型（1：累计2：年3：月4：周）\r\n     * @param {integer} Year 年\r\n     * @param {integer} Month 月\r\n     * @param {integer} Week 周\r\n     */\r\n    async getTypeAnalysis(){\r\n      let params = {\r\n        ProjectID: this.ProjectID,\r\n        BuildingName: this.buildingName == \"整体楼栋\" ? \"\" : this.buildingName,\r\n        DateType: this.dateType,\r\n        Year: this.year,\r\n        Month: this.month,\r\n        Week: this.week\r\n      };\r\n      let data = await this.Request(GetTypeAnalysis(params));\r\n      this.category = []\r\n      this.barData = []\r\n      if (data.StatusCode === 200) {\r\n        if(data.Detiel.length > 0){\r\n          data.Detiel.forEach(item => {\r\n            this.category.push(item.ProblemType)\r\n            this.barData.push(item.Count)\r\n          })\r\n          this.barChart();\r\n        }else{\r\n          this.$toast({\r\n            message: \"暂无数据！\",\r\n            className: \"my-toast\"\r\n          });\r\n        }\r\n        // console.log(\"==getTypeAnalysis==\", this.category, this.barData)\r\n      } else {\r\n        this.$toast({\r\n          type: \"fail\",\r\n          message: data.message ? data.message : \"后台异常\",\r\n          className: \"my-toast\"\r\n        });\r\n      }\r\n    },\r\n    /**\r\n     * @name 获取模型的楼栋信息\r\n     */\r\n    getBuildingData() {\r\n      this.Request(\r\n        GetBuilding({ projectid: this.ProjectID })\r\n      ).then(data => {\r\n        if (data.StatusCode === 200) {\r\n          if (data.Detiel.length > 0) {\r\n            this.buildList = data.Detiel;\r\n          }else{\r\n            this.buildList = [];\r\n          }\r\n        } else {\r\n          this.$toast({\r\n            className: \"my-toast\",\r\n            type: \"fail\",\r\n            message: data.Message\r\n          });\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * @name 点击菜单项触发的事件回调，用户可以通过相应的菜单项key进行不同的操作\r\n     * @param {dropdown-item 的指令} command key\r\n     */\r\n    handleCommand(command) {\r\n      this.buildingName = command\r\n      this.getTypeAnalysis()\r\n    },\r\n    //返回\r\n    goBack() {\r\n      this.$router.push({ path: \"/Risk\" });\r\n    },\r\n    startCumulative(){\r\n      this.dateType = 1;\r\n      this.getTypeAnalysis();\r\n    },\r\n    //点击年月周显示弹窗\r\n    actionsheetYear() {\r\n      this.pickerTitle = \"年\"\r\n      this.popupShow = true;\r\n      let date = new Date;\r\n      let year = date.getFullYear();\r\n      let years = []\r\n      for(let i = 0; i < 6; i++){\r\n        years.push(Number(year) - i)\r\n      }\r\n      this.dateType = 2;\r\n      this.columns = years;\r\n    },\r\n    actionsheetMonth() {\r\n      this.pickerTitle = \"月\"\r\n      this.popupShow = true;\r\n      this.dateType = 3;\r\n      this.columns = [1,2,3,4,5,6,7,8,9,10,11,12]\r\n    },\r\n    actionsheetWeek() {\r\n      this.pickerTitle = \"周\"\r\n      this.popupShow = true;\r\n      this.dateType = 4;\r\n      this.columns = [1,2,3,4,5]\r\n    },\r\n    //对选项文字进行处理\r\n    formatter(type, value) {\r\n      if (type === \"year\") {\r\n        return `${value}年`;\r\n      } else if (type === \"month\") {\r\n        return `${value}月`;\r\n      }\r\n      return value;\r\n    },\r\n    /**\r\n     * @name 点击完成按钮时触发\r\n     */\r\n    onConfirm(value, index){\r\n      switch (this.pickerTitle) {\r\n        case \"年\":\r\n          {\r\n            this.year = value;\r\n            this.popupShow = false;\r\n            this.getTypeAnalysis();\r\n          }\r\n          break;\r\n        case \"月\":\r\n          {\r\n            this.month = value;\r\n            this.popupShow = false;\r\n            this.getTypeAnalysis();\r\n          }\r\n          break;\r\n        case \"周\":\r\n          {\r\n            this.week = value;\r\n            this.popupShow = false;\r\n            this.getTypeAnalysis();\r\n          }\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    onCancel() {\r\n      console.log(\"取消\");\r\n      this.showYear = false;\r\n      this.showMonth = false;\r\n      this.showWeek = false;\r\n    },\r\n    //echart横向柱状图\r\n    barChart() {\r\n      var myChart = echarts.init(this.$refs.myChartBar);\r\n      //初始化数据\r\n      var option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\"\r\n          }\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          top: \"1%\",\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          show: false,\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: this.category,\r\n          splitLine: { show: false },\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          offset: 10,\r\n          nameTextStyle: {\r\n            fontSize: 24\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: \"数量\",\r\n            type: \"bar\",\r\n            data: this.barData,\r\n            barWidth: 16,\r\n            barGap: 10,\r\n            smooth: true,\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: \"right\",\r\n                offset: [0, 0],\r\n                textStyle: {\r\n                  color: \"#F68300\",\r\n                  fontSize: 13\r\n                }\r\n              }\r\n            },\r\n            itemStyle: {\r\n              emphasis: {\r\n                barBorderRadius: 7\r\n              },\r\n              normal: {\r\n                barBorderRadius: 7,\r\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                  { offset: 0, color: \"#3977E6\" },\r\n                  { offset: 1, color: \"#37BBF8\" }\r\n                ])\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang='stylus' scoped rel='stylesheet/stylus'>\r\n.container-problem-analysis\r\n  width 100%\r\n  height 100%\r\n  background-color #fff\r\n  .van-nav-bar\r\n    // height 88px\r\n    // line-height 88px\r\n    // border-bottom 1px solid #E5E5E5\r\n    // background-color #5892FF\r\n    .fontsize\r\n      // font-size 42px\r\n      // color #fff\r\n      // display inline-block\r\n      // vertical-align middle\r\n    .speed_of_progress\r\n      // width 36px\r\n      // height 36px\r\n  .wrapper\r\n    margin-top 88px\r\n    .cumulative\r\n      width 100%\r\n      height 100px\r\n      line-height 60px\r\n      box-sizing border-box\r\n      padding 20px\r\n      text-align center\r\n      color #4E8CF5\r\n      display flex\r\n      span\r\n        flex 1\r\n        border 1px solid #BDC1C6\r\n        font-size 28px\r\n      .year, .month, .week\r\n        border-left 0\r\n      .active\r\n        background-color #4E8CF5\r\n        color #fff\r\n    .my_echarts\r\n      padding 20px\r\n      .chart_bar\r\n        width 700px\r\n        height 1000px\r\n</style>\r\n<style>\r\n@import \"~@/assets/css/resetVant.css\";\r\n/* 顶部表头 */\r\n/* .container-problem-analysis .van-nav-bar .van-nav-bar__title {\r\n  font-size: 36px;\r\n  color: #fff;\r\n} */\r\n/*下拉菜单*/\r\n.container-problem-analysis .el-dropdown {\r\n  display: inline-block;\r\n  height: 60px;\r\n  line-height: 80px;\r\n}\r\n.container-problem-analysis .el-dropdown .el-dropdown-link {\r\n  margin-left: 24px;\r\n  /* font-size: 28px; */\r\n}\r\n.container-problem-analysis .el-dropdown .el-dropdown-link img {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n.el-dropdown-menu {\r\n  background-color: #222832;\r\n  opacity: 0.9;\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n  padding: 0 20px;\r\n  border: 0;\r\n}\r\n.el-dropdown-menu__item {\r\n  color: #fff;\r\n  width: 140px;\r\n  line-height: 85px;\r\n  text-align: center;\r\n  border-bottom: 1px solid #737577;\r\n}\r\n.container-problem-analysis .van-picker {\r\n  font-size: 28px;\r\n}\r\n.container-problem-analysis .van-picker__toolbar {\r\n  height: 82px;\r\n  line-height: 82px;\r\n}\r\n.container-problem-analysis .block {\r\n  line-height: 88px;\r\n  text-align: center;\r\n}\r\n.container-problem-analysis .el-input__inner {\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n.container-problem-analysis .el-input__prefix {\r\n  width: 20px;\r\n  height: 20px;\r\n  /* line-height: 20px; */\r\n}\r\n.el-date-picker .el-date-table td span {\r\n  width: 35px;\r\n  height: 35px;\r\n  line-height: 36px;\r\n}\r\n.el-date-picker .el-date-table td, .el-date-picker .el-date-table td div {\r\n  height: 35px;\r\n}\r\n.el-picker-panel {\r\n  width: 100%;\r\n}\r\ndiv.el-date-picker div.el-picker-panel__content {\r\n  width: 96%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/index/ProblemAnalysis"}]}