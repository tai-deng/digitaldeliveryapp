{"remainingRequest":"C:\\Users\\Public\\软件\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Public\\软件\\app\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Public\\软件\\app\\src\\api\\request.js","dependencies":[{"path":"C:\\Users\\Public\\软件\\app\\src\\api\\request.js","mtime":1557819887561},{"path":"C:\\Users\\Public\\软件\\app\\.babelrc","mtime":1553246877633},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552270042041},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1552270024016},{"path":"C:\\Users\\Public\\软件\\app\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1552270038615}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\Public\\\\\\u8F6F\\u4EF6\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"C:\\\\Users\\\\Public\\\\\\u8F6F\\u4EF6\\\\app\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n//请求相关类\nimport axios from 'axios';\nimport qs from 'querystring'; // 生产\n\nvar api = '';\n\nif (process.env.NODE_ENV == 'development') {\n  console.log('开发模式');\n  api = '/api/api';\n} else {\n  api = '/api';\n} // get请求封装\n\n\nexport default {\n  fetchGet: function fetchGet(url) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new _Promise(function (resolve, reject) {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json;charset=UTF-8' // get 参数不拼接会报404\n\n      };\n      axios.get(\"\".concat(api, \"/\").concat(url, \"?\").concat(qs.stringify(params))).then(function (res) {\n        // console.log(res)\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error.response.status);\n      });\n    });\n  },\n  fetchPost: function fetchPost(url) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new _Promise(function (resolve, reject) {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      };\n      axios.post(\"\".concat(api, \"/\").concat(url), _JSON$stringify(params)).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error.response.status);\n      });\n    });\n  },\n  // post请求，get传参方式\n  fetchPostGet: function fetchPostGet(url) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new _Promise(function (resolve, reject) {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      };\n      axios.post(\"\".concat(api, \"/\").concat(url, \"?\").concat(qs.stringify(params))).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error.response.status);\n      });\n    });\n  },\n\n  /**\n   * post和get混合传参 减少后台类\n   * @param {*} url \n   * @param {*} getParams get后的参数\n   * @param {*} postParams Post的data对象\n   */\n  fetchPostAndGet: function fetchPostAndGet(url) {\n    var getParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var postParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new _Promise(function (resolve, reject) {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      };\n      axios.post(\"\".concat(api, \"/\").concat(url, \"?\").concat(qs.stringify(getParams)), _JSON$stringify(postParams)).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error.response.status);\n      });\n    });\n  },\n  // formData对象方式上传文件 提交文件不能写JSON.stringify(params)，应该直接提交params对象\n  formDataUpLoad: function formDataUpLoad(url) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var formData = new FormData();\n    params.forEach(function (i) {\n      formData.append(i.key, i.value);\n    });\n    return new _Promise(function (resolve, reject) {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'multipart/form-data'\n      };\n      axios.post(\"\".concat(api, \"/\").concat(url), formData).then(function (res) {\n        resolve(res.data);\n      }).catch(function (error) {\n        reject(error.response.status);\n      });\n    });\n  }\n};",{"version":3,"sources":["C:\\Users\\Public\\软件\\app\\src\\api\\request.js"],"names":["axios","qs","api","process","env","NODE_ENV","console","log","fetchGet","url","params","resolve","reject","defaults","headers","localStorage","getItem","get","stringify","then","res","data","catch","error","response","status","fetchPost","post","fetchPostGet","fetchPostAndGet","getParams","postParams","formDataUpLoad","formData","FormData","forEach","i","append","key","value"],"mappings":"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","sourcesContent":["//请求相关类\n\nimport axios from 'axios'\nimport qs from 'querystring'\n// 生产\nlet api = ''\nif (process.env.NODE_ENV == 'development') {\n  console.log('开发模式')\n  api = '/api/api'\n} else {\n  api = '/api'\n}\n// get请求封装\nexport default {\n  fetchGet(url, params = {}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json;charset=UTF-8'\n      }\n      // get 参数不拼接会报404\n      axios.get(`${api}/${url}?${qs.stringify(params)}`).then(res => {\n        // console.log(res)\n        resolve(res.data)\n      }).catch(error => {\n        reject(error.response.status)\n      })\n    })\n  },\n  fetchPost(url, params = {}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n      axios.post(`${api}/${url}`, JSON.stringify(params)).then(res => {\n        resolve(res.data)\n      }).catch(error => {\n        reject(error.response.status)\n      })\n    })\n  },\n  // post请求，get传参方式\n  fetchPostGet(url, params = {}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n      axios.post(`${api}/${url}?${qs.stringify(params)}`).then(res => {\n        resolve(res.data)\n      }).catch(error => {\n        reject(error.response.status)\n      })\n    })\n  },\n  /**\n   * post和get混合传参 减少后台类\n   * @param {*} url \n   * @param {*} getParams get后的参数\n   * @param {*} postParams Post的data对象\n   */\n  fetchPostAndGet(url, getParams = {}, postParams = {}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      }\n      axios.post(`${api}/${url}?${qs.stringify(getParams)}`, JSON.stringify(postParams)).then(res => {\n        resolve(res.data)\n      }).catch(error => {\n        reject(error.response.status)\n      })\n    })\n  },\n  // formData对象方式上传文件 提交文件不能写JSON.stringify(params)，应该直接提交params对象\n  formDataUpLoad(url, params = []) {\n    let formData = new FormData();\n    params.forEach(i => {\n      formData.append(i.key, i.value)\n    })\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers = {\n        'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        'Content-Type': 'multipart/form-data'\n      }\n      axios.post(`${api}/${url}`, formData).then(res => {\n        resolve(res.data)\n      }).catch(error => {\n        reject(error.response.status)\n      })\n    })\n  }\n}\n\n"]}]}