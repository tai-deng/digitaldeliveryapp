<!-- quality质量管理 -->
<template>
  <div class="container-quality">
    <!-- 头部 -->
    <van-nav-bar title="质量管理" @click-left="goBack" fixed :border="false" :z-index="100">
      <span class="el-icon-arrow-left fontsize" slot="left"></span>
      <!-- <img src="../../../assets/imgs/screen.png" class="screen fontsize" slot="right"> -->
    </van-nav-bar>
    <div class="wrapper">
      <!-- 搜索框 -->
      <van-search
        v-model="searchValue"
        placeholder="楼栋、专业、楼层、资源"
        show-action
        shape="round"
        @keypress="GetQCSchedulePlan"
      >
        <div slot="action" @click="GetQCSchedulePlan">搜索</div>
      </van-search>
      <!-- 隔层 -->
      <div class="interlayer"></div>
      <!-- 表格 -->
      <el-table :data="tableData" style="width: 100%" :row-class-name="rowClassNameHandler" @row-click="clickRow">
        <el-table-column type="index" align="left" label="序号" width="76">
          <template slot-scope="scope">
            <span :style="{marginLeft: scope.row.level * 5 + 'px'}">
              <span v-if="scope.row.showChildren" @click.stop="onExpand(scope.row)" :style="{cursor:scope.row.hasChildren ? 'pointer' : 'normal'}">
                {{scope.row.index}}
              </span>
              <span v-else @click.stop="onExpand(scope.row)" :style="{cursor:scope.row.hasChildren ? 'pointer' : 'normal'}">
                {{scope.row.index}}
              </span>
            </span>
            <!-- <span :data-level="scope.row.level"></span> -->
          </template>
        </el-table-column>
        <el-table-column prop="TaskName" align="center">
          <template slot="header" slot-scope="scope">
            <span class="el-dropdown-link">
              任务名称
            </span>
            <!-- <el-dropdown trigger="click">
              <span class="el-dropdown-link">
                任务名称
                <i class="el-icon-arrow-down"></i>
              </span>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item>整体模型</el-dropdown-item>
                <el-dropdown-item>A1栋</el-dropdown-item>
                <el-dropdown-item>A2栋</el-dropdown-item>
                <el-dropdown-item>A3栋</el-dropdown-item>
              </el-dropdown-menu>
            </el-dropdown> -->
          </template>
        </el-table-column>
        <el-table-column prop="BaseFinishTime" align="center" :formatter="formatterTime">
          <template slot="header" slot-scope="scope">
            <span class="el-dropdown-link">
              计划结束时间
            </span>
            <!-- <el-dropdown trigger="click">
              <span class="el-dropdown-link">
                计划结束时间
                <i class="el-icon-arrow-down"></i>
              </span>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item>全部</el-dropdown-item>
                <el-dropdown-item>建筑专业</el-dropdown-item>
                <el-dropdown-item>结构专业</el-dropdown-item>
                <el-dropdown-item>暖通专业</el-dropdown-item>
                <el-dropdown-item>通风专业</el-dropdown-item>
                <el-dropdown-item>弱电系统</el-dropdown-item>
              </el-dropdown-menu>
            </el-dropdown> -->
          </template>
        </el-table-column>
        <el-table-column prop="Duration" align="center" width="66">
          <template slot="header" slot-scope="scope">
            <span class="el-dropdown-link">
              工期
            </span>
            <!-- <el-dropdown trigger="click">
              <span class="el-dropdown-link">
                工期
                <i class="el-icon-arrow-down"></i>
              </span>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item>全部</el-dropdown-item>
                <el-dropdown-item>建筑专业</el-dropdown-item>
                <el-dropdown-item>结构专业</el-dropdown-item>
                <el-dropdown-item>暖通专业</el-dropdown-item>
                <el-dropdown-item>通风专业</el-dropdown-item>
                <el-dropdown-item>弱电系统</el-dropdown-item>
              </el-dropdown-menu>
            </el-dropdown> -->
          </template>
        </el-table-column>
      </el-table>
    </div>
  </div>
</template>

<script type='textecmascript-6'>
import {GetQCSchedulePlan} from '@/api/api.js'

export default {
  data() {
    return {
      active: 0, //tab默认位置
      searchValue: "", //搜索值
      tableData: [], //质量进度列表
      userId:'', //用户id
    };
  },
  mounted(){
    this.userId = localStorage.getItem("userId");
    this.GetQCSchedulePlan()
  },
  computed: {
    tableHeight(){
      return (Number(document.documentElement.clientHeight) - 200) + 'px';
    },
  },
  methods: {
    onExpand(row) {
      let self = this;

      let isShowChildren = !row["showChildren"];
      row["showChildren"] = isShowChildren;
      self._loadAllSubItems(row, true, isShowChildren);
    },

    _loadAllSubItems(item, isFirstLevlChildren, isShowChilren) {
      let self = this;
      let dataArray = [];
      for (let i = 0; i < self.tableData.length; i++) {
        let tempItem = self.tableData[i];
        if (tempItem.TaskParentId === item.TaskId) {
          if (isFirstLevlChildren) {
            tempItem["visible"] = !tempItem["visible"];
          }
          tempItem["hiddenByCategory"] = !isShowChilren;

          dataArray.push(tempItem);
          let subItemArray = self._loadAllSubItems(
            tempItem,
            false,
            isShowChilren
          );
          dataArray = dataArray.concat(subItemArray);
        }
      }
      return dataArray;
    },
    GetQCSchedulePlan(){ //获取质量进度表数据

      let params = {
        ProjectID: localStorage.getItem("projectid"),
        Builing: '',
        Specialty: '',
        Floor: '',
        CategoryName: '',
        QueryInfo: this.searchValue
      };
      // console.log(params)
      this.load();
      this.Request(GetQCSchedulePlan(params)).then(res=>{
        this.$toast.clear();
        if(res.StatusCode===200){
          if (res.Detiel.length != 0) {
            let result = res.Detiel
            let resultArray = this._processLevelStatisticData(result);
            this.tableData = resultArray;
          }else{
            this.tableData = []
          }
        }else{
         this.$message({type:'error',message:res.Message,center:'true'})
        }
      })
    },
    /**
     * @name 遍历进度计划数据
     */
    _processLevelStatisticData(dataArray) {
      let self = this;

      let resultArray = []; // 一级栏目
      let index = 1;
      let level = 1;
      for (let i = 0; i < dataArray.length; i++) {
        let item = dataArray[i];
        // 查找一级分类
        if (!item.TaskParentId && typeof item.TaskParentId != "undefined") {
          //item.TaskParentId === null
          item["level"] = level;
          item["index"] = index;
          resultArray.push(item);
          self._loadChildrenData(
            resultArray,
            dataArray,
            item,
            level + 1,
            index++
          );
        }
      }
      return resultArray;
    },
    /**
     * @name 递归输出子栏目
     */
    _loadChildrenData(resultArray, originArray, item, level, index) {
      let self = this;

      // let deployed = 0
      // let undeployed = 0
      // let edit = 0
      // let completed = 0
      let index2 = 1;

      for (let i = 0; i < originArray.length; i++) {
        let originItem = originArray[i];
        // 判断是否是item项的子项
        if (originItem.TaskParentId === item.TaskId) {
          item["hasChildren"] = true;
          item["showChildren"] = false;

          originItem["index"] = index + "." + index2;
          originItem["level"] = level;
          originItem["visible"] = false; // 子项默认隐藏
          originItem["hiddenByCategory"] = false;

          resultArray.push(originItem);
          self._loadChildrenData(
            resultArray,
            originArray,
            originItem,
            level + 1,
            index + "." + index2++
          );
        }
      }
    },
    rowClassNameHandler({ row, rowIndex }) {
      let className = "pid-" + row.TaskParentId;
      if (
        row.TaskParentId !== null &&
        (row["visible"] !== true || row["hiddenByCategory"] === true)
      ) {
        className += " hiddenRow";
      }
      return className;
    },
    /**
     * 格式化日期
     */
    formatterTime(row, column) {
      if (!row.BaseFinishTime) return "";
      return row.BaseFinishTime.substring(0, row.BaseFinishTime.indexOf("T"));
    },
    //点击表格行
    clickRow(row) {
      console.log('row',row.TaskId)
      this.$router.push({ path: "/ControlDetails", query:{'TaskID': row.TaskId,'userid':this.userId }});
    },
    //返回
    goBack() {
      this.$router.push({ path: "/nav/to/index" });
    }
  }
};
</script>
<style lang='stylus' scoped rel='stylesheet/stylus'>
.container-quality
  width 100%
  height 100%
  .van-nav-bar
    height 88px
    line-height 88px
    border-bottom 1px solid #E5E5E5
    .fontsize
      font-size 42px
      color #333
      display inline-block
      vertical-align middle
    .screen
      width 41px
      height 35px
  .wrapper
    margin-top 88px
    .interlayer
      width 100%
      height 21px
</style>
<style>
/* 顶部表头 */
.container-quality .van-nav-bar .van-nav-bar__title {
  font-size: 36px;
}
/*tab切换栏*/
.container-quality .van-tab span {
  font-size: 30px;
  line-height: 80px;
}
.container-quality .van-tabs--line .van-tabs__wrap {
  height: 80px;
}
.container-quality .van-tabs--line .van-tabs__wrap {
  color: #666;
  position: fixed;
  top: 88px !important;
}
.container-quality .van-tabs--line .van-tabs__wrap .van-tabs__nav {
  background-color: #fff;
}
.container-quality .van-tab--active {
  color: #5a92ff;
}
/* tab下边线 */
.container-quality .van-hairline--top-bottom::after {
  border-width: 0 0 2px 0;
}
.container-quality .van-tabs--line {
  padding-top: 80px;
}
.container-quality .van-tabs__line {
  height: 4px;
  bottom: 19px;
  width: 120px;
  bottom: 21px;
  background-color: #5a92ff;
}
/* .container-quality .van-tabs__content {
  margin-top: 88px;
} */
/* 搜索栏 */
.container-quality .van-search {
  height: 98px;
  padding: 17px 24px;
}
.container-quality .van-search .van-search__content {
  height: 64px;
  border-radius: 0;
}
.container-quality .van-search .van-search__content .van-cell {
  line-height: 64px;
  font-size: 28px;
}
.container-quality .van-search .van-search__content .van-cell .van-icon {
  font-size: 40px;
}
.container-quality .van-search__action {
  width: 120px;
  line-height: 64px;
  color: #fff;
  font-size: 30px;
  text-align: center;
  background: rgba(88, 146, 255, 1);
  border-radius: 8px;
  margin-left: 18px;
}
/*表格*/
.container-quality .el-table {
  color: #333;
  font-size: 24px;
}
.container-quality .el-table thead tr th {
  background-color: #5892ff;
  color: #fff;
}
.container-quality .el-table .cell {
  line-height: 76px;
}
.container-quality .el-table th div {
  vertical-align: middle;
  color: #fff;
}
.el-dropdown-link{font-size: 24px;}
/* .container-quality .el-icon--right {
  width: 18px;
  height: 9px;
  display: inline-block;
  background-image: url('../../../assets/imgs/bottom.png');
  background-size: 100% 100%;
  background-position: center;
  background-color: #fff;
} */
/*下拉框*/
.el-dropdown-menu {
  background-color: #222832;
  opacity: 0.9;
  border-radius: 8px;
  box-sizing: border-box;
  padding: 0 20px;
  border: 0;
}
.el-dropdown-menu__item {
  color: #fff;
  width: 140px;
  line-height: 85px;
  text-align: center;
  border-bottom: 1px solid #737577;
}
.container-quality .hiddenRow {
  display: none;
}
</style>
